"""
Django settings for AnimaRR project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ygtif7x94+6a+&&8v(=^rec6c95ln%@02_p(ue1vhdeguu8^rf'

# -------------------------------------------------------------------------------------------------------

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# 
# DEBUG = int(os.environ.get('DEBUG', 1))

# -------------------------------------------------------------------------------------------------------

# 이 사이트에 접속할 수 있는 사람은? => '*' 모두
ALLOWED_HOSTS = ['*']

# if os.environ.get('DJANGO_ALLOWED_HOSTS'):
#     ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS').split(' ')
# else:
#     ALLOWED_HOSTS = []

# -------------------------------------------------------------------------------------------------------

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'blog',
    'dogimg',
    'map',
    'board',
    'django_extensions',

    # AnimaR 웹 앱과 django-allauth를 연결
    'django.contrib.sites',

    # pip install django-allauth 로 먼저 설치하기
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    #'allauth.socialaccount.providers.google',

    #provider 구글 페이스북 카톡 깃허브 등 어떤 소셜로그인 제공업체로부터 서비스를 제공받을 것인지 의미
    'allauth.socialaccount.providers.google',

    # pip install django-crispy-forms
    'crispy_forms',

    # pip install django-markdownx
    # https://neutronx.github.io/django-markdownx/
    'markdownx',

    # pip install django-summernote
    # django-summernote-0.8.20.0
    'django_summernote',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AnimaRR.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AnimaRR.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = { 
	'default': { 
    	'ENGINE': 'django.db.backends.mysql', 
        'NAME': 'final', 
        'USER': 'root', 
        'PASSWORD': '1234', 
        'HOST': 'localhost', 
        'PORT': '3306', 
     } 
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

# #세계기준
# TIME_ZONE = 'UTC'

# 서울기준
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

# #세계기준
# USE_TZ = True

USE_L10N = True

# 서울기준
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, '_static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# 앱 마다 나뉘어져 있는 static 파일들을 한 곳에 모으는 과정
#STATIC_ROOT = BASE_DIR / 'staticfiles' 
# $ python manage.py collectstatic
# ㄴ>  해당 경로에 staticfiles라는 폴더가 생성되고 안에 static 파일들이 모임

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

#check.
#===========================
STATICFILES_DIRS=[
    BASE_DIR,"static", 
]
#===========================


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# $ pip install django-allauth 로 먼저 설치하기 ----------------------------------
AUTHENTICATION_BACKENDS = (
    #Needed to login by username in Django admin, regardless of 'allauth'
    'django.contrib.auth.backends.ModelBackend',
    
    # 'allauth' specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

SITE_ID = 1

# LOGIN_REDIRECT_URL 로그인 후 호출되는 url을 지정
LOGIN_REDIRECT_URL = '/'

# 회원가입 할 때 이메일 반드시 받기 설정
ACCOUNT_EMAIL_REQUIRED = True
# 이메일이 맞는지 검증하는 기증 작동X
ACCOUNT_EMAIL_VERIFICATION = 'none'
#-----------------------------------------------------------------------------------
# urls.py에도 바꿨음

LOGIN_REDIRECT_URL = '/blog/'

# $ pip install django-crispy-forms로 먼저 설치하기 ----------------------------
# 오류나서 설치 함 $ pip install django-crispy-forms
# https://stackoverflow.com/questions/63707815/modulenotfounderror-no-module-named-crispy-forms 참고
CRISPY_TEMPLATE_PACK = 'bootstrap4'
#-----------------------------------------------------------------------------------

X_FRAME_OPTIONS = 'SAMEORIGIN'

SUMMERNOTE_THEME = 'bs4'  # Show summernote with Bootstrap4

SUMMERNOTE_CONFIG = {
    'summernote': {
        # Change editor size
        'width': '100%',
        'height': '480',
    }
}